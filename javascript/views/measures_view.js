// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = {
    _id: '_design/measures',
    views: {
      by_location: {
        map: (function(doc) {
          if (doc.type === "measure") {
            return emit(doc.location_id, doc);
          }
        }).toString()
      },
      by_date: {
        map: (function(doc) {
          if (doc.type === "measure") {
            return emit(doc.timestamp, doc);
          }
        }).toString()
      },
      by_name: {
        map: (function(doc) {
          if (doc.type === "measure") {
            return emit(doc.name, doc);
          }
        }).toString()
      },
      by_location_and_date_and_name: {
        map: (function(doc) {
          if (doc.type === "measure") {
            return emit([doc.location_id, doc.timestamp, doc.name], doc);
          }
        }).toString()
      },
      by_location_and_date_and_beehouse: {
        map: (function(doc) {
          if (doc.type === "measure") {
            return emit([doc.location_id, doc.timestamp, doc.beehouse_id], doc);
          }
        }).toString()
      },
      beehouse_weight_by_hour: {
        map: (function(doc) {
          var hourTime;
          if (doc.type === "measure" && doc.beehouse_id !== null && doc.name === "global-weight") {
            hourTime = doc.timestamp.split(":")[0];
            return emit(hourTime, [hourTime, doc.value, 1]);
          }
        }).toString(),
        reduce: (function(key, values, rereduce) {
          var factors, i, j, len, time, totalFactors, totalWeight, weight, weights;
          time = values[0][0];
          weights = values.map(function(v) {
            return v[1];
          });
          factors = values.map(function(v) {
            return v[2];
          });
          totalFactors = sum(factors);
          totalWeight = 0;
          for (i = j = 0, len = weights.length; j < len; i = ++j) {
            weight = weights[i];
            totalWeight += weight * factors[i];
          }
          totalWeight = totalWeight / totalFactors;
          return [time, totalWeight, totalFactors];
        }).toString()
      },
      beehouse_weight_by_day: {
        map: (function(doc) {
          var day;
          if (doc.type === "measure" && doc.beehouse_id !== null && doc.name === "global-weight") {
            day = doc.timestamp.split("T")[0];
            return emit(day, [day, doc.value, 1]);
          }
        }).toString(),
        reduce: (function(key, values, rereduce) {
          var factors, i, j, len, time, totalFactors, totalWeight, weight, weights;
          time = values[0][0];
          weights = values.map(function(v) {
            return v[1];
          });
          factors = values.map(function(v) {
            return v[2];
          });
          totalFactors = sum(factors);
          totalWeight = 0;
          for (i = j = 0, len = weights.length; j < len; i = ++j) {
            weight = weights[i];
            totalWeight += weight * factors[i];
          }
          totalWeight = totalWeight / totalFactors;
          return [time, totalWeight, totalFactors];
        }).toString()
      },
      beehouse_weight_by_quarter_day: {
        map: (function(doc) {
          var day, dayTokens, hour, hourTokens, quarter;
          if (doc.type === "measure" && doc.beehouse_id !== null && doc.name === "global-weight") {
            dayTokens = doc.timestamp.split("T");
            day = dayTokens[0];
            hourTokens = dayTokens[1].split(":");
            hour = parseInt(hourTokens[0], 10);
            hour = hour < 6 ? "02" : hour < 12 ? "09" : hour < 18 ? "12" : "18";
            quarter = day + "T" + hour + ":00:00.000Z";
            return emit(quarter, [quarter, doc.value, 1]);
          }
        }).toString(),
        reduce: (function(key, values, rereduce) {
          var factors, i, j, len, time, totalFactors, totalWeight, weight, weights;
          time = values[0][0];
          weights = values.map(function(v) {
            return v[1];
          });
          factors = values.map(function(v) {
            return v[2];
          });
          totalFactors = sum(factors);
          totalWeight = 0;
          for (i = j = 0, len = weights.length; j < len; i = ++j) {
            weight = weights[i];
            totalWeight += weight * factors[i];
          }
          totalWeight = totalWeight / totalFactors;
          return [time, totalWeight, totalFactors];
        }).toString()
      },
      beehouse_weight_by_week: {
        map: (function(doc) {
          var day, tag, weekNo, yearStart;
          if (doc.type === "measure" && doc.beehouse_id !== null && doc.name === "global-weight") {
            day = new Date(doc.timestamp);
            day.setHours(0, 0, 0);
            day.setDate(day.getDate() + 4 - (day.getDay() || 7));
            yearStart = new Date(day.getFullYear(), 0, 1);
            weekNo = Math.ceil((((day - yearStart) / 86400000) + 1) / 7);
            tag = yearStart.getFullYear() + "W" + ("0" + weekNo).slice(-2);
            return emit([doc.beehouse_id, tag], [doc.value, 1]);
          }
        }).toString(),
        reduce: (function(key, values) {
          var factors, i, j, len, totalFactors, totalWeight, weight, weights;
          weights = values.map(function(v) {
            return v[0];
          });
          factors = values.map(function(v) {
            return v[1];
          });
          totalFactors = sum(factors);
          totalWeight = 0;
          for (i = j = 0, len = weights.length; j < len; i = ++j) {
            weight = weights[i];
            totalWeight += weight * factors[i];
          }
          totalWeight = totalWeight / totalFactors;
          return [totalWeight, totalFactors];
        }).toString()
      }
    }
  };

}).call(this);
